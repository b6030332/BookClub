@model IEnumerable<BookClub.ViewModels.Review.ReviewViewModel>

<div class="container">
    <div class="reviewHeader">
        <div class="reviewHeading">
            <span class="reviewTitle">
                Reviews
            </span>
        </div>
    </div>

    @*As User hovers over stars they will be highlighted and confirmed if clicked*@
    <script type="text/javascript">
    function CRateOut(rating) {
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr('class', 'glyphicon glyphicon-star-empty');
        }
    }

    function CRateOver(rating) {
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr('class', 'glyphicon glyphicon-star');
        }
    }

    function CRateClick(rating) {
        $("#labelRating").val(rating);
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr('class', 'glyphicon glyphicon-star');
        }
        for (var i = rating + 1; i <= 5; i++) {
            $("#span" + i).attr('class', 'glyphicon glyphicon-star-empty');

        }
    }

    function CRateSelected() {
        var rating = $("#labelRating").val();
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr('class', 'glyphicon glyphicon-star');
        }
    }

    @* If User doesn't select star for rating, error message displays*@
    function VerifyRating() {
        var rating = $("#labelRating").val();
        if (rating == "0") {
            alert("Please Select Rating");
            return false;
        }
    }
    </script>

    @*If there are any reviews in the Database, each item will be displayed via partial link*@
    @if (Model.Any())
    {
        foreach (var item in Model)
        {
            @Html.Partial("_ReviewContentPartial", item)
        }
    }

    @*If there are no reviews and the User isnt registered, prompt for Register/Login will show*@ 
    else if (!User.Identity.IsAuthenticated)
    {
        <p>There are no reviews yet, become a @Html.ActionLink("Registered member", "Register", "Account", new { returnUrl = Request.Url.PathAndQuery }, null) 
        or  @Html.ActionLink("Login", "Login", "Account", new { returnUrl = Request.Url.PathAndQuery }, null)  </p>
    }

    @*If there are no reviews and the User is registered, will prompt them to create a view*@
    else if (User.Identity.IsAuthenticated)
    {
        <p>There are no reviews yet, why not <b>create one</b> below</p>
    }

    <h3 class="reviewCommentTitle">Please enter your comments</h3>

    @using (Html.BeginForm("AddReview", "Review", FormMethod.Post, new { onsubmit = "return VerifyRating()" }))
    {
        @*Creates text area for the user to leave a review*@

        <textarea rows="6" cols="100" name="bookContent" id="txtBookContent"></textarea>

        @*Displays 5 empyty stars with different roles for the javascript to process*@

        <div onmouseout="CRateSelected()" id="starRating">
            <span id="span1" onmouseout="CRateOut(1)" onmouseover="CRateOver(1)" onclick="CRateClick(1)" class="glyphicon glyphicon-star-empty"></span>
            <span id="span2" onmouseout="CRateOut(2)" onmouseover="CRateOver(2)" onclick="CRateClick(2)" class="glyphicon glyphicon-star-empty"></span>
            <span id="span3" onmouseout="CRateOut(3)" onmouseover="CRateOver(3)" onclick="CRateClick(3)" class="glyphicon glyphicon-star-empty"></span>
            <span id="span4" onmouseout="CRateOut(4)" onmouseover="CRateOver(4)" onclick="CRateClick(4)" class="glyphicon glyphicon-star-empty"></span>
            <span id="span5" onmouseout="CRateOut(5)" onmouseover="CRateOver(5)" onclick="CRateClick(5)" class="glyphicon glyphicon-star-empty"></span>
        </div>

        <div>
            <input type="hidden" name="rating" id="labelRating" value="0" />
        </div>
        <div>
            <input type="hidden" name="id" id="labelRating" value="@ViewBag.BookId" />
        </div>

        @* Adds a Submit button which redirects to reviews page if a user is logged in *@
        if (User.Identity.IsAuthenticated)
        {
            <div>
                <input type="submit" class="btn btn-primary active" name="SaveReview" value="Save Review" id="reviewSubmit" />
            </div>
        }

        @*If User isn't registered submit button is hidden and prompt for Register/Login is shown*@
        else if (!User.Identity.IsAuthenticated)
        {
            <p>
                You must be a @Html.ActionLink("Registered member", "Register", "Account", new { returnUrl = Request.Url.PathAndQuery }, null)
                or @Html.ActionLink("Logged in", "Login", "Account", new { returnUrl = Request.Url.PathAndQuery }, null) to add a review.
            </p>
        }

    }
</div>
