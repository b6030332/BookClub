@using Microsoft.AspNet.Identity

@model BookClub.ViewModels.JointViewModels.GetPostViewModel

<div class="containter body-content">
    <div class="row postHeader">
        <h4 id="backLink">
            @*Allows User to return to the previous Discussion quickly *@
            Go back to the
            @Html.ActionLink(Model.DiscussionName, "GetPostsByDiscussion",

         new { id = Model.DiscussionId , Controller = "Discussion" })
            discussion
        </h4>
        
        <div class="postHeading">
            <span class="postTitle">
                Post Title: <b>@Model.PostTitle</b>
            </span>

            @*If User is not registered, will be promted to Register or Login to add a new Post*@
            
                @if (!User.Identity.IsAuthenticated)
                {
                    <p>
                        <span class="promptLogin">
                            You must be a
                            @Html.ActionLink("Registered Member", "Register", "Account") or
                            @Html.ActionLink("Logged in", "Login", "Account", new { returnUrl = Request.Url.PathAndQuery }, null)
                            to reply to this post
                        </span>
                    </p>
                }
        </div>
    </div>

    <div class="row" id="postContent">
        <div class="col-md-3 postAuthorContainer">
            @Html.ActionLink(Model.UserName, "Detail",

               new { id = Model.UserId, Controller = "Profile" })

            <span class="postData">@Model.DatePosted</span>
        </div>

        <div class="col-md-9 postContentContainer">
            <div class="postContent">
                @Html.Raw(Model.PostContent)
            </div>
        </div>

        <div class="deletePost">

            @*Only allows logged in Users to delete/edit their own posts by showing icons for Delete & Edit*@

            @if (Model.UserId == User.Identity.GetUserId())
            {
                <a><i class="glyphicon glyphicon-edit" onclick="location.href='@Url.Action("UpdatePost", "Post", new { id = Model.PostId })'"></i></a>
                <a><i class="glyphicon glyphicon-trash" onclick="location.href='@Url.Action("DeletePost", "Post", new { id = Model.PostId })'"></i></a>
            }
        </div>

    </div>

    <div class="row" id="replyDivide"></div>

    @*Allows only Registered and Logged in Users to see Post reply link to add a Reply *@

    @if (User.Identity.IsAuthenticated)
    {
        <div class="row" id="postReplyRow">
            <span>
                <button class="btn btn-success" id="addButton" onclick="location.href='@Url.Action("AddReply", "Reply", new { id = Model.PostId})'">Post Reply</button>
            </span>
        </div>
    }

    @*If there are any replies, the content, username, and update/delete icons will be displayed for that User *@
    @if (Model.Replies.Any())
    {
        foreach (var reply in Model.Replies)
        {
        <div class="row" id="replyContent">
            <i class="material-icons md-72">keyboard_return</i>
            <div class="col-md-3 replyAuthorContainer">

                @Html.ActionLink(reply.ReplyUserName, "Detail",

      new { id = reply.ReplyUserId, Controller = "Profile" })

                <span class="postData">@reply.ReplyPosted</span>
            </div>

            <div class="col-md-9 replyContentContainer">
                <div class="replypostContent">
                    @Html.Raw(reply.ReplyContent)
                </div>
            </div>

            @*Only allows Users who are logged in to see edit/delete icons for their own post replies*@
            <div class="row" id="deleteReply"></div>
            @if (reply.ReplyUserId == User.Identity.GetUserId())
            {
                <div id="deleteReplyRow">

                    <a><i class="glyphicon glyphicon-edit" onclick="location.href='@Url.Action("UpdateReply", "Reply", new { id = reply.Id })'"></i></a>
                    <a><i class="glyphicon glyphicon-trash" onclick="location.href='@Url.Action("DeleteReply", "Reply", new { id = reply.Id })'"></i></a>

                </div>
            }

        </div>
        }

    }
    else
    {
        //if there are no replies to the post, this message will be shown 
        <div class="noPosts">

            <h3>
                There are no replies to this post. <br />

            </h3>

        </div>
    }

</div>


