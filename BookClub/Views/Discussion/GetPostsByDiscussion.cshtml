@model BookClub.ViewModels.JointViewModels.DiscussionPostViewModel
<div class="container body-content">
    <div class="row sectionHeader">
        <span class="discussionTitle">@Model.Discussion.Title Discussion</span>
        <div class="sectionHeading">

            @*If the user is verified as a memeber, give them the ability to add a new post, by showing the post button*@

            @if (Context.User.Identity.IsAuthenticated)
            {
                <span id="headingBtn">
                    @Html.ActionLink("Add Post", "AddPost",
                                 new { id = Model.Discussion.Id, Controller = "Post" }, null)
                </span>

            }

        <input type="text" id="Search" value="Search" placeholder="Search..." class="searchBar" onfocus="clearThis(this)" />
            <button type="submit" class="btn btn-discussionSearch">
                <i class="material-icons">search</i>
            </button>

        <input asp-for="@Model.Discussion.Id" name="id" type="hidden" />

            <div class="sectionDescription">
                @if (!User.Identity.IsAuthenticated)
                {
                    <p>
                        <span>
                            You must be a
                            @Html.ActionLink("registered member", "Register", "Account")
                            to create a new post
                        </span>
                    </p>
                }
            </div>
        </div>
  </div>

    <div class="discussionContent">
        @if (Model.Posts.Any())
        {

        <table class="table table-hover table-bordered" id="discussionPage">
            <tbody>
                @foreach (var post in Model.Posts)

                {
                    <tr class="Search">
                        <td>
                            <div class="postData">
                                <div class="postTitle">
                                    @Html.ActionLink(post.Title, "GetPost",

                                     new { id = post.Id, Controller = "Post" })
                                </div>

                                <div class="discussionSubtitle">
                                    <div>

                                        <span class="postAuthor">
                                            @Html.ActionLink(post.AuthorName, "Detail",

                                             new { id = post.AuthorId, Controller = "Profile" })
                                        </span>

                                        <div class="deletePost">
                                            @if (!User.Identity.IsAuthenticated)

                                            {
                                                @Html.ActionLink("Delete", "DeletePost",
                                                    new { id = post.Id, Controller = "Post" })
                                                <i class="glyphicon glyphicon-trash" onclick="location.href='@Url.Action("DeletePost", "Post", new { id = post.Id })';return false;" />

                                            }
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </td>

                        <td>
                            <div class="discussionPostCount">
                             Replies: @post.RepliesCount
                            </div>
                        </td>

                        <td>
                            <div class="postDate">@post.DatePosted</div>
                        </td>
                        
                    </tr>

                }

            </tbody>

        </table>
        
        }

        else
        {
            <div class="noPosts">
                <i class="material-icons md-72">question_asnwer</i>
            </div>
            <h4>
                It looks like there are no @Model.Discussion.Title posts yet. <br />
                Why not

                @Html.ActionLink("Create", "AddPost",
                 new { id = Model.Discussion.Id, Controller = "Post" }, null)

                one?
            </h4>
        }
        </div>

</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    $(document).ready(function () {
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchText = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchText)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            })

        })
    });
</script>
@section Scripts{
    <script>

        function clearThis(target) {
            target.value = "";
        }

        </script>
    } 

        