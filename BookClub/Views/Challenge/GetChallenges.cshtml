@using Microsoft.AspNet.Identity;

@model BookClub.Data.Models.Challenges

@{
    ViewBag.Title = "GetChallenges";
}

@*'<divs> where partial views will be called and implemented'*@
<div id="tableDiv"></div>
<div id="challengeCreateForm">

    @*Calls the 'AJAXAddChallenge' method in the Controller which replaces the contents of 'tableDiv'*@

    @using (Ajax.BeginForm("AJAXAddChallenge", "Challenge", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = "tableDiv"

    }))
    {
        //If user is registered will show add challenge box
        if (User.Identity.IsAuthenticated)
        {
            <div class="form-group" id="challengeDescription">
                @Html.AntiForgeryToken()
                <p>Add Challenges</p>
                
                <div>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        //If User isn;t register will prompt them to Register or Login 
        else if (!User.Identity.IsAuthenticated)
        {
             <div class="promptLogin">
                    You must be a
                    @Html.ActionLink("Registered Member", "Register", "Account", new { returnUrl = Request.Url.PathAndQuery }, null) or
                    @Html.ActionLink("Logged in", "Login", "Account", new { returnUrl = Request.Url.PathAndQuery }, null)
                    to reply to add/view your challenges
                </div>
        }
       
    }
</div>

@*Scripts used to call J-Query function e.g. ChallengeTable.js*@

@section Scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/Custom_Scripts/ChallengeTable.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}